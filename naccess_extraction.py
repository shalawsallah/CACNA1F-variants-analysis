#! /usr/bin/env python3

import pandas as pd

'''18/06/18 
calculating residue solvent accessibility,
the REL column measurments are the % accessiblity, i.e. the percentage of the residue being accessible, for the residues '''

'''Variables: 
1) this_gene 
2) the chain considered for analysis (usually the last one because mutrot analyses last chain)

IMPORTANT: the variants in the file analysed need to be sorted from smallest residue number BEFORE running the following script,
Reduce the pdb before running Naccess (results will be different if use original pdb)'''
gene = 'rpe65'
chain_id = 'A'
naccess_file = open('/Users/mdefsss2/naccess/reduced_'+gene+'.rsa')
variant_file = pd.read_excel('/Users/mdefsss2/other_genes/'+gene+'/'+gene+'_analysis.xlsx')
residue_numbers = variant_file.columns.get_loc('res_number')
# variant_file['beta_strand']= np.zeros(len(variant_file))
# genes = variant_file.columns.get_loc('genes')

'''using .rsa file generated by naccess, relative side chain solvent accessibility of residues are measured'''

resn_rel_side_acc = []
naccess_resn_variants = []
naccess_file_residues = []
res_in_struc = []
for line in naccess_file:
    if line[:3] == 'RES' and line[8] == chain_id: # or line[:4].strip() == 'RES"
        res_name = line[4:7]
        # abs_side_access = float(line[28:35].strip())
        rel_side_access = float(line[36:42].strip())
        res_num = int(line[9:13].strip())
        res_in_struc.append(res_num)
        naccess_file_residues.append(res_num)
        for k in range(len(variant_file)):
            # gene = variant_file.iloc[k, genes]
            var_res_num = variant_file.iloc[k, residue_numbers]
            # if gene == this_gene:
            if var_res_num == res_num:
                naccess_resn_variants.append(res_num)
                resn_rel_side_acc.append(rel_side_access)
                print(rel_side_access)
                # print(var_res_num) #verify the residues analysed which are in naccess file

print('number of variants present on the pdb file: ', len(naccess_resn_variants))
print('variants from naccess file: ', naccess_resn_variants)

##############################################################################
